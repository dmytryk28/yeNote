{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "yeNote API"
  },
  "host": "127.0.0.1:5000",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "description": "",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of users",
        "description": "",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/users/authenticate/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Authenticate user",
        "description": "Authenticate user with email and password",
        "operationId": "authenticateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Email and password for authentication",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAuth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data for updating the user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response, no content"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/statistics/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's statistics by ID",
        "description": "Retrieve statistics for a user by their ID",
        "operationId": "getStatistics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose statistics to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/{category}/{point}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user's statistics by ID",
        "description": "Update user's statistics by their ID, task category, and point",
        "operationId": "updateStatistics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to update statistics for",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "path",
            "description": "Number of task category",
            "required": true,
            "type": "integer"
          },
          {
            "name": "point",
            "in": "path",
            "description": "Point for task",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response, no content"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/students_tasks/{student_id}/{task_id}": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Connect student to task",
        "description": "Associates a student with a task",
        "operationId": "connectStudentTask",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "description": "ID of the student",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful connection of student to task"
          },
          "404": {
            "description": "Student and task not connected"
          }
        }
      }
    },
    "/tasks/student/{studentId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get student tasks",
        "description": "Retrieve all tasks assigned to a specific student",
        "operationId": "getStudentTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "ID of the student",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task ID"
                  },
                  "teacher_id": {
                    "type": "string",
                    "description": "Teacher ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the task"
                  },
                  "students": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of student IDs assigned to the task"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found or no tasks assigned to this student"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "name",
        "surname",
        "role",
        "email"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "User ID"
        },
        "name": {
          "type": "string",
          "description": "User's first name"
        },
        "surname": {
          "type": "string",
          "description": "User's last name"
        },
        "role": {
          "type": "string",
          "description": "User role (Teacher/Student)",
          "enum": [
            "Teacher",
            "Student"
          ]
        },
        "email": {
          "type": "string",
          "description": "User's email address"
        }
      }
    },
    "UserInput": {
      "type": "object",
      "required": [
        "name",
        "surname",
        "role",
        "email",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "User's first name"
        },
        "surname": {
          "type": "string",
          "description": "User's last name"
        },
        "role": {
          "type": "string",
          "description": "User role (Teacher/Student)",
          "enum": [
            "Teacher",
            "Student"
          ]
        },
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        }
      }
    },
    "UserAuth": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        }
      }
    }
  }
}
